import os
import psutil
from datetime import datetime
from utils import human_readable_size
import disnake
from disnake.ext import commands

class Help(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot  

    def cog_load(self):
        print('–ö–æ–≥ –∑–∞–≥—Ä—É–∂–µ–Ω: "{}"'.format(self.qualified_name))

    def cog_unload(self):
        print('–ö–æ–≥ –≤—ã–≥—Ä—É–∂–µ–Ω: "{}"'.format(self.qualified_name))

    @commands.slash_command(description='–ü–∏–Ω–∞–µ—Ç –±–æ—Ç–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–∏–Ω–≥')
    async def ping(self, inter: disnake.ApplicationCommandInteraction):
        await inter.response.send_message(f"–ü–æ–Ω–≥! {round(self.bot.latency * 1000)}–º—Å", ephemeral=True)
    
    @commands.slash_command(description='–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ')
    async def help(self, inter: disnake.ApplicationCommandInteraction):
        embed = disnake.Embed(title='–û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –±–æ—Ç–µ', color=disnake.Color(0x474896))
        embed.add_field(name='‚öôÔ∏è –ú–µ—Ö–∞–Ω–∏–∫–∏',value='–°—É—Ö–∞—Ä–∏–∫–∏, –∏–ª–∏ –ö–∏—Ä–∏–µ—à–∫–∏, –∏–ª–∏ <:kirieshka:1100873685201588285> - –æ—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞.\n–ò—Ö –º–æ–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –≤—Å—è–∫–æ–µ —Ä–∞–∑–Ω–æ–µ.\n–ó–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 1-3 —Å—É—Ö–∞—Ä–∏–∫–æ–≤. –ó–∞—Ä–∞–±–æ—Ç–æ–∫ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å, –ø–æ–ª—É—á–∏–≤ [–º–µ–¥–∞–ª–∏ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å](https://discord.com/channels/305031592068513796/1187134858531713075/1187135112463253515). –ë—Ä–æ–Ω–∑–∞ –¥–∞—ë—Ç 2-5, —Å–µ—Ä–µ–±—Ä–æ 3-7, –∑–æ–ª–æ—Ç–æ 4-9.\n–î–∞, —Ñ—É–Ω–∫–∏–æ–Ω–∞–ª –Ω–µ —Ç–∞–∫–æ–π –±–æ–ª—å—à–æ–π, –Ω–æ –æ–Ω –ø–æ—Ç–∏—Ö–æ–Ω—å–∫—É —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è. –ï—Å–ª–∏ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –ø–æ–º–æ—á—å, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–∏–¥–±–µ–∫ <@303930559976046603> –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –≤ –õ–°, –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –ø–æ—á–∏–Ω–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å [~~–≤ –≥–æ–≤–Ω–æ–∫–æ–¥–µ~~ –Ω–∞ –ì–∏—Ç–•–∞–±–µ](https://github.com/cheat-r/helperbot), –µ—Å–ª–∏ –≤—ã –ø–æ–π–º—ë—Ç–µ —á—Ç–æ —Ç–∞–º –Ω–∞–ø–∏—Å–∞–Ω–æ.',inline=False)
        embed.add_field(name='üíµ –≠–∫–æ–Ω–æ–º–∏–∫–∞',value='`/balance` - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–ª–∞–Ω—Å —É—á–∞—Å—Ç–Ω–∏–∫–∞\n`/balance_top` - —Ç–æ–ø-10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n`/inventory` - –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å –≤–∞—à–∏–º–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–º–∏ –∏–ª–∏ –≤—ã–¥–∞–Ω–Ω—ã–º–∏ –±–µ–∑–¥–µ–ª—É—à–∫–∞–º–∏, –≥–¥–µ –∏—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å\n`/shop` - –º–∞–≥–∞–∑–∏–Ω –≤—Å—è–∫–∏—Ö –±–µ–∑–¥–µ–ª—É—à–µ–∫, –æ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ä–æ–ª–∏ –¥–æ –±–∞–Ω–∫–∏ –ø–∏–≤–∞',inline=False)
        embed.add_field(name='‚ÑπÔ∏è –ü–æ–ª–µ–∑–Ω–æ–µ',value='`/embedcreate` - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–±–µ–¥ –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞ –∑–∞ 300 —Å—É—Ö–∞—Ä–∏–∫–æ–≤ (—Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º)\n`/help` - –≤—ã –∑–¥–µ—Å—å!\n`/ping` - –ø–∏–Ω–≥ –æ—Ç –±–æ—Ç–∞ –¥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –î–∏—Å–∫–æ—Ä–¥–∞ –±–µ–∑ –∏–∑–ª–∏—à–Ω–∏—Ö –∏–∑—ã—Å–∫–æ–≤ –≤ –≤–∏–¥–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è. –î–ª—è —Ç–µ—Ö, –∫–æ–º—É –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ä–∞–∑—É.\n`/statistics` - —Å–≤–µ–¥–µ–Ω–∏—è –æ –±–æ—Ç–µ: –∞–ø—Ç–∞–π–º, –ø–∏–Ω–≥, –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –û–ó–£ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä',inline=False)
        embed.add_field(name='ü•≥ –†–∞–∑–≤–ª–µ–∫–∞–ª–æ–≤–æ',value='`/achievements` - –≤—Å—è–∫–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ä–≤–µ—Ä–∞\n`/colorfunding` - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫—Ä–∞—É–¥—Ñ–∞–Ω–¥–∏–Ω–≥ –¥–ª—è —Å–±–æ—Ä–∞ —Å—É—Ö–∞—Ä–∏–∫–æ–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤ –≤ <id:customize>\n`/duel` - –∫–∞–∫ Buckshot Roulette, —Ç–æ–ª—å–∫–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –†–µ–≤–æ–ª—å–≤–µ—Ç–∫–∞ (Revolvette). –ó–∞—á–µ–º? ||–ü–æ –ø—Ä–∏–∫–æ–ª—É.||\n`/emoji` - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª—é–±–æ–π —ç–º–æ–¥–∑–∏ –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',inline=False)
        await inter.response.send_message(embed=embed, ephemeral=True)    
    @commands.Cog.listener()
    async def on_message(self, message):
      if message.author.bot: return
      if self.bot.user.mention == message.content:
        await message.reply('–ü—Ä–∏–≤–µ—Ç! \n–ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–ª—é—Å—å, —è –≤ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞—Ö. (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π `/help`, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ)')

    @commands.slash_command(description='–ü–æ–ª–µ–∑–Ω–∞—è (–∏ –Ω–µ –æ—á–µ–Ω—å) —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
    async def statistics(self, inter: disnake.ApplicationCommandInteraction):
      uptime = datetime.now().timestamp() - self.bot.start_time.timestamp()
      time_d = int(uptime) / (3600 * 24)
      time_h = int(uptime) / 3600 - int(time_d) * 24
      time_min = int(uptime) / 60 - int(time_h) * 60 - int(time_d) * 24 * 60
      time_sec = int(uptime) - int(time_min) * 60 - int(time_h) * 3600 - int(time_d) * 24 * 60 * 60
      uptime_str = '%01d –¥–Ω., %02d —á., %02d –º–∏–Ω. –∏ %02d —Å–µ–∫.' % (time_d, time_h, time_min, time_sec)
      process = psutil.Process(os.getpid())
      cpu_percent = psutil.cpu_percent()
      ram = psutil.virtual_memory()
      ram_used = human_readable_size(ram.used)
      ram_total = human_readable_size(ram.total)
      ram_available = human_readable_size(ram.available)
      embed = disnake.Embed(title=':information_source: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞', color=disnake.Color(0x474896))
      embed.add_field(name=':clock1: –ê–ø—Ç–∞–π–º –±–æ—Ç–∞',value=f'{uptime_str} (<t:{int(self.bot.start_time.timestamp())}:R>)',inline=False)
      embed.add_field(name=':control_knobs: –†–∞—Å—Ö–æ–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞',value=f'{cpu_percent}%',inline=True)
      embed.add_field(name=':file_cabinet: –†–∞—Å—Ö–æ–¥ –û–ó–£',value=human_readable_size(process.memory_info().rss),inline=True)
      embed.add_field(name=':file_cabinet: –í—Å–µ–≥–æ –û–ó–£',value=f'–ó–∞–Ω—è—Ç–æ: {ram_used} ({ram.percent}%) / {ram_total}\n–°–≤–æ–±–æ–¥–Ω–æ: {ram_available} ({ram.available * 100 / ram.total:.1f}%)',inline=False)
      embed.add_field(name=':signal_strength: –ü–∏–Ω–≥',value=f'{round(self.bot.latency * 1000)}–º—Å',inline=True)
      await inter.response.send_message(embed=embed, ephemeral=True)
      
def setup(bot: commands.Bot):
    bot.add_cog(Help(bot))