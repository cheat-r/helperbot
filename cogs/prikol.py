import disnake
import asyncio
import random
from disnake.ext import commands
from typing import Optional

class Prikol(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot  

    def cog_load(self):
        print('–ö–æ–≥ –∑–∞–≥—Ä—É–∂–µ–Ω: "{}"'.format(self.qualified_name))

    def cog_unload(self):
        print('–ö–æ–≥ –≤—ã–≥—Ä—É–∂–µ–Ω: "{}"'.format(self.qualified_name))

    @commands.slash_command(
    name='verification_create',
    description='–°–æ–∑–¥–∞—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏')
    @commands.default_member_permissions(administrator=True)
    async def verif(self, inter: disnake.AppCmdInter):
        await inter.response.defer(ephemeral=True)
        await inter.channel.send('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ—á–∏—Ç–∞–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞!\n–¢–µ–ø–µ—Ä—å –ø–æ—Ä–∞ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –†–∞–Ω–¥–æ–º–æ–≤—Ü–∞, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤—Å–µ –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞. \n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∏ –º—ã –Ω–∞—á–Ω—ë–º –ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, *–±–æ–ª—å–Ω–æ –Ω–µ –±—É–¥–µ—Ç*.',
        components=[
        disnake.ui.Button(label='–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è', style=disnake.ButtonStyle.green, emoji='<:whothefu:1068100193192509450>', custom_id='verify')
        ]
        )
        await inter.edit_original_response('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.')
    
    @commands.Cog.listener('on_button_click')
    async def btn_listener(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == 'verify':
            if not inter.author.get_role(1014569986968268891):
              qs = QuestionSelect(question=1)
              view = disnake.ui.View(timeout=300.0)
              view.add_item(qs)
              await inter.response.send_message('–ù—É, –ø–æ—Å–º–æ—Ç—Ä–∏–º —á–µ–º—É —Ç—ã –Ω–∞—É—á–∏–ª—Å—è.\n–ï—Å–ª–∏ –≤—ã –Ω–µ –≤ –∫—É—Ä—Å–µ –ø—Ä–æ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ—Å—Ç—å / –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ—Å—Ç—å *–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è*, –∞ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–æ —ç—Ç–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ, —á—Ç–æ –º–æ–∂–Ω–æ –∏ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å?',view=view,ephemeral=True)
              qs.message = await inter.original_response()
            else:
              await inter.response.send_message('–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ù–µ—Ç –Ω—É–∂–¥—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –µ—ë –µ—â—ë —Ä–∞–∑. <:nikosmile:1161596483691360276> ', ephemeral=True)

    @commands.slash_command(description='–ò–≥—Ä–∞ –≤ –†–µ–≤–æ–ª—å–≤–µ—Ç–∫—É —Å –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º. –ü–µ—Ä–µ–Ω–æ—Å Buckshot Roulette –ø—Ä—è–º–æ –∫ –≤–∞–º –≤ —á–∞—Ç!', options=[
        disnake.Option('duel_member', '–ë—Ä–æ—Å–∏—Ç—å –≤—ã–∑–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É! –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –ª—é–±–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–≥ –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤', disnake.OptionType.user),
        disnake.Option('starting_hp', '–ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∑–∞—Ä—è–¥–æ–≤ (—Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –µ—Å–ª–∏ –Ω–µ —É—Ç–æ—á–Ω–µ–Ω–æ)', disnake.OptionType.integer, min_value=2, max_value=6),
        disnake.Option('items_per_round', '–ö–æ–ª-–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥ (0 –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç—ã, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏)', disnake.OptionType.integer, min_value=0, max_value=4),
        disnake.Option('bullets_per_round', '–ö–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω –≤ –æ–±–æ–π–º–µ –∑–∞ —Ä–∞—É–Ω–¥, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏', disnake.OptionType.integer, min_value=2, max_value=8)
    ])
    async def duel(self, inter: disnake.ApplicationCommandInteraction, duel_member: disnake.User = None, starting_hp: int = None, items_per_round: int = None, bullets_per_round: int = None):
        if duel_member:
            if duel_member == inter.author:
                await inter.response.send_message('–ß—ë, —Å–∞–º—ã–π —É–º–Ω—ã–π –Ω–∞—à—ë–ª—Å—è? –ù–µ–ª—å–∑—è –±—Ä–æ—Å–∏—Ç—å –≤—ã–∑–æ–≤ —Å–∞–º–æ–º—É —Å–µ–±–µ.',ephemeral=True)
            elif duel_member.bot:
                await inter.response.send_message('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é (–∏–ª–∏ –∫ —Å—á–∞—Å—Ç—å—é), —Å –±–æ—Ç–∞–º–∏ –Ω–µ–ª—å–∑—è –¥—É—ç–ª–∏—Ç—å—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∏–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.',ephemeral=True)
        author = inter.author
        comview = Confirm(author,duel_member)
        embed = disnake.Embed(color=disnake.Color(0x474896))
        embed.set_author(name='–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞')
        if starting_hp:
            embed.add_field(name='–ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∑–∞—Ä—è–¥–æ–≤:',value=str(starting_hp))
        if items_per_round != None:
            embed.add_field(name='–ö–æ–ª-–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value='[–ü—Ä–µ–¥–º–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã]' if items_per_round == 0 else str(items_per_round))
        if bullets_per_round:
            embed.add_field(name='–ö–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value=str(bullets_per_round))
        if not starting_hp and items_per_round is None and not bullets_per_round:
            embed.add_field(name='–í–∞–Ω–∏–ª—å–Ω–∞—è –∏–≥—Ä–∞!',value='–•–æ—Å—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª, –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–∫ –ø—Ä–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.')
        await inter.response.send_message((f'{inter.author} –±—Ä–æ—Å–∏–ª –≤—ã–∑–æ–≤ {duel_member}!\n–û—Å–º–µ–ª–∏—Ç—Å—è –ª–∏ –æ–Ω –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤?' if duel_member else f"`{inter.author}` –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –¥—É—ç–ª–∏...\n–û—Å–º–µ–ª–∏—Ç—Å—è –ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤?"), view=comview, embed=embed)
        await comview.wait()
        message = await inter.original_message()
        if comview.value is None or comview.value is False:
          await message.delete()
        else:
            comview.clear_items()
            await message.edit(f"`{comview.user}` —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –Ω–∞ –∏–≥—Ä—É —Å `{inter.author}`!", view=comview)
            await asyncio.sleep(3)
            dealer = inter.author
            player = comview.user
            if starting_hp: health = starting_hp
            else: health = random.randint(2,6)
            dealer_health = health
            player_health = health
            handcuffed = 0
            doubled = 0
            dealer_inv = {
                "glass": 0, # –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω –≤ –±–∞—Ä–∞–±–∞–Ω–µ –∏ —Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω
                "beer": 0, # —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞—É–Ω–¥ –µ—Å–ª–∏ –±–∞—Ä–∞–±–∞–Ω –ø—É—Å—Ç–æ–π
                "doubler": 0, # —É–¥–≤–∞–∏–≤–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ –æ–¥–∏–Ω –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª –∏–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Ö–æ–¥–∞
                "shield": 0, # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –æ—Ç –≤—ã—Å—Ç—Ä–µ–ª–∞ (—É–¥–≤–æ–µ–Ω–Ω—ã–π –ø–∞—Ç—Ä–æ–Ω –Ω–∞–Ω–µ—Å—ë—Ç 1 —É—Ä–æ–Ω), —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞
                "handcuffs": 0, # –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ (–¥–æ–ø –≤—ã—Å—Ç—Ä–µ–ª)
                "shielded": 0,
                "total": 0 # –ª–∏–º–∏—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –±–æ–ª—å—à–µ 8 —à—Ç—É–∫ –±—É–¥–µ—Ç —Å–∫–∏–¥—ã–≤–∞—Ç—å—Å—è –≤ –º–æ—é –ª–∏—á–Ω—É—é —è–º—É >:D
            }
            player_inv = {
                "glass": 0,
                "beer": 0,
                "doubler": 0,
                "shield": 0,
                "handcuffs": 0,
                "shielded": 0,
                "total": 0
            }
            round = 0
            barrel = []
            turn = random.choice([dealer,player])
            while dealer_health > 0 and player_health > 0:
                if barrel == []:
                    if bullets_per_round:
                        reload = bullets_per_round - 2
                    else:
                        reload = random.randint(0,4)
                    if items_per_round != None:
                        items = items_per_round
                    else:
                        items = random.randint(1,4)
                    for x in range(items): # –≤—ã–¥–∞—á–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                        if dealer_inv['total'] < 8:
                            dealer_inv[random.choice(['glass','beer','doubler','shield','handcuffs'])] += 1
                            dealer_inv['total'] += 1
                        if player_inv['total'] < 8:
                            player_inv[random.choice(['glass','beer','doubler','shield','handcuffs'])] += 1
                            player_inv['total'] += 1
                    for x in range(reload): # –∑–∞—Ä—è–¥–∫–∞ –±–∞—Ä–∞–±–∞–Ω–∞
                        if barrel.count(1) > barrel.count(0):
                            barrel.append(0)
                        elif barrel.count(0) - barrel.count(1) == 2:
                            barrel.append(1)
                        else:
                            barrel.append(random.randint(0,1))
                    barrel.append(1)
                    barrel.append(0)
                    random.shuffle(barrel)
                    round += 1
                    if doubled:
                        doubled = 0
                    if handcuffed:
                        handcuffed = 0
                        if turn == player: turn = dealer
                        else: turn = player
                    await message.edit(f'{barrel.count(1)} –ø–∞—Ç—Ä–æ–Ω(–∞), {barrel.count(0)} –ø—É—Å—Ç–æ–π(-—ã—Ö)')
                embed = disnake.Embed(color=disnake.Color(0x474896))
                embed.set_author(name=f'–†–µ–≤–æ–ª—å–≤–µ—Ç–∫–∞ - —Ä–∞—É–Ω–¥ {round}')
                embed.title = f'–•–æ–¥ `{turn}`!'+(' (–í—ã—Å—Ç—Ä–µ–ª —É—Å–∏–ª–µ–Ω)' if doubled else '')+(' (–û–ø–ø–æ–Ω–µ–Ω—Ç –≤ –Ω–∞—Ä—É—á–Ω–∏–∫–∞—Ö)' if handcuffed==2 else '\n(–û–ø–ø–æ–Ω–µ–Ω—Ç –≤ –Ω–∞—Ä—É—á–Ω–∏–∫–∞—Ö, –Ω–æ —Å–∫–æ—Ä–æ –≤—ã–±–µ—Ä–µ—Ç—Å—è)' if handcuffed==1 else '')
                embed.add_field(name=f'–ó–∞—Ä—è–¥—ã `{dealer}`:',value=('‚ö°' * dealer_health)+('üõ°Ô∏è' if dealer_inv['shielded'] else ''))
                embed.add_field(name=f'–ó–∞—Ä—è–¥—ã `{player}`:',value=('‚ö°' * player_health)+('üõ°Ô∏è' if player_inv['shielded'] else ''))
                view = Actions(turn,dealer,player,dealer_inv,player_inv,barrel,doubled,handcuffed)
                await message.edit(embed=embed,view=view)
                await view.wait()
                view.clear_items()
                embed = None
                if view.value == 'Timeout':
                    embed = disnake.Embed(color=disnake.Color(0x474896))
                    embed.set_author(name='–¶–∏—Ñ–µ—Ä–∫–∏ —Ä–∞–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞...')
                    embed.add_field(name=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ `{dealer}`:',value=f'–ó—è—Ä—è–¥–æ–≤: {dealer_health}\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤: {dealer_inv["total"]}')
                    embed.add_field(name=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ `{player}`:',value=f'–ó—è—Ä—è–¥–æ–≤: {player_health}\n–ü—Ä–µ–¥–º–µ—Ç–æ–≤: {player_inv["total"]}')
                    embed.add_field(name='–ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∑–∞—Ä—è–¥–æ–≤:',value=str(health),inline=False)
                    if items_per_round != None:
                        embed.add_field(name='–ö–æ–ª-–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value='[–ü—Ä–µ–¥–º–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã]' if items_per_round == 0 else str(items_per_round))
                    if bullets_per_round:
                        embed.add_field(name='–ö–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value=str(bullets_per_round))
                    await message.edit(f'–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ - `{turn}` –Ω–µ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –≤ —Ç–µ—á–µ–Ω–∏–∏ 3-—Ö –º–∏–Ω—É—Ç.\n–ü–æ–±–µ–¥–∞ –ø—Ä–∏—Å—É–∂–¥–∞–µ—Ç—Å—è `'+(str(dealer) if turn == player else str(player))+'`!',view=view,embed=embed)
                    break
                elif view.value == 'Self':
                    if barrel[0] == 0:
                        await message.edit(f'{turn} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –≤ —Å–µ–±—è...\n–≠—Ç–æ –±—ã–ª –ø—É—Å—Ç–æ–π, –∏–¥—ë–º –¥–∞–ª—å—à–µ.',view=view)
                    elif barrel[0] == 1:
                        await message.edit(f'{turn} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –≤ —Å–µ–±—è...\nüíÄ <- –º–æ–ª–æ–¥–µ—Ü, –¥–µ–±–∏–ª, –ø–æ–ø–∞–ª!',view=view)
                        if turn == dealer:
                            dealer_health -= (1 + doubled - dealer_inv['shielded'])
                            dealer_inv['shielded'] = 0
                            player_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = player
                            else: turn = player
                        elif turn == player:
                            player_health -= (1 + doubled - player_inv['shielded'])
                            dealer_inv['shielded'] = 0
                            player_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = dealer
                            else: turn = dealer
                        doubled = 0
                    barrel.pop(0)
                elif view.value == 'Opposite':
                    if barrel[0] == 0:
                        await message.edit(f'{turn} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –≤ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞..?\n–•–æ—Ç—è –Ω–µ—Ç, –Ω–µ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª. –≠—Ç–æ –±—ã–ª –ø—É—Å—Ç–æ–π.',view=view)
                        if turn == dealer:
                            player_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = player
                            else: turn = player
                        elif turn == player:
                            dealer_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = dealer
                            else: turn = dealer
                        doubled = 0
                    elif barrel[0] == 1:
                        await message.edit(f'{turn} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª –≤ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞... üí•\n–£–ø—Å. –û–Ω–æ —Å–∞–º–æ, —á–µ—Å—Ç–Ω–æ.',view=view)
                        if turn == dealer:
                            player_health -= (1 + doubled - player_inv['shielded'])
                            player_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = player
                            else: turn = player
                        elif turn == player:
                            dealer_health -= (1 + doubled - dealer_inv['shielded'])
                            dealer_inv['shielded'] = 0
                            if handcuffed:
                                handcuffed -= 1
                                if not handcuffed: turn = dealer
                            else: turn = dealer
                        doubled = 0
                    barrel.pop(0)
                elif view.value == 'Beer':
                    await message.edit(f'{turn} —Å–¥–µ–ª–∞–ª "–∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π" –≤—ã—Å—Ç—Ä–µ–ª.\n\n'+('–ü—É–ª—è –ø–æ–ª–µ—Ç–µ–ª–∞ –ø—Ä—è–º–æ –≤ —Å—Ç–µ–Ω—É. –°—Ç—Ä–∞—à–Ω–æ.' if barrel[0]==1 else '–í—ã—Å—Ç—Ä–µ–ª –Ω–µ –ø—Ä–æ–∏–∑–æ—à—ë–ª. –í—Å—ë –µ—â—ë —Å—Ç—Ä–∞—à–Ω–æ.'),view=view)
                    barrel.pop(0)
                elif view.value == 'Doubler':
                    doubled = 1
                    await message.edit(f'{turn} —É–¥–≤–æ–∏–ª —É—Ä–æ–Ω —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞!',view=view)
                elif view.value == 'Shield':
                    if turn == dealer:
                        dealer_inv['shielded'] = 1
                    elif turn == player:
                        player_inv['shielded'] = 1
                    await message.edit(f'{turn} –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∞–ª—Å—è —â–∏—Ç–æ–º!',view=view)
                elif view.value == 'Handcuffs':
                    handcuffed = 2
                    await message.edit(f'{turn} –Ω–∞—Ü–µ–ø–∏–ª –Ω–∞—Ä—É—á–Ω–∏–∫–∏ –Ω–∞ —Å–≤–æ–µ–≥–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞!',view=view)
                await asyncio.sleep(3)
            view.clear_items()
            embed = disnake.Embed(color=disnake.Color(0x474896))
            embed.set_author(name='–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã')
            if starting_hp:
                embed.add_field(name='–ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∑–∞—Ä—è–¥–æ–≤:',value=str(starting_hp))
            if items_per_round != None:
                embed.add_field(name='–ö–æ–ª-–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value='[–ü—Ä–µ–¥–º–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã]' if items_per_round == 0 else str(items_per_round))
            if bullets_per_round:
                embed.add_field(name='–ö–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –∑–∞ —Ä–∞—É–Ω–¥:',value=str(bullets_per_round))
            if not starting_hp and items_per_round is None and not bullets_per_round:
                embed = None
            if round == 3:
                round = str(round) + '-–µ–º'
            else: round = str(round) + '-–æ–º'
            if dealer_health == 0:
                await message.edit(f'`{player}` –æ–±—ã–≥—Ä–∞–ª `{dealer}` –Ω–∞ {round} —Ä–∞—É–Ω–¥–µ —Å {player_health} HP –≤ –∑–∞–ø–∞—Å–µ!',view=view,embed=embed)
            elif player_health == 0:
                await message.edit(f'`{dealer}` –æ–±—ã–≥—Ä–∞–ª `{player}` –Ω–∞ {round} —Ä–∞—É–Ω–¥–µ —Å {dealer_health} HP –≤ –∑–∞–ø–∞—Å–µ!',view=view,embed=embed)

class Shoot(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=30.0)
        self.value: Optional[bool] = None

    @disnake.ui.button(label="–í –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞", style=disnake.ButtonStyle.blurple)
    async def shoot_op(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = True
        self.stop()
    
    @disnake.ui.button(label="–í —Å–µ–±—è", style=disnake.ButtonStyle.gray)
    async def shoot_self(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = False
        self.stop()

class Use(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=60.0)
        self.value: Optional[str] = None

    @disnake.ui.button(label="–°—Ç–µ–∫–ª–æ", style=disnake.ButtonStyle.gray)
    async def glass(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = 'glass'
        self.stop()
    
    @disnake.ui.button(label="–ü–∏–≤–æ", style=disnake.ButtonStyle.gray)
    async def beer(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = 'beer'
        self.stop()
    
    @disnake.ui.button(label="–£–¥–≤–æ–∏—Ç–µ–ª—å", style=disnake.ButtonStyle.gray)
    async def doubler(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = 'doubler'
        self.stop()
    
    @disnake.ui.button(label="–©–∏—Ç", style=disnake.ButtonStyle.gray)
    async def shield(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = 'shield'
        self.stop()
    
    @disnake.ui.button(label="–ù–∞—Ä—É—á–Ω–∏–∫–∏", style=disnake.ButtonStyle.gray)
    async def handcuffs(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        self.value = 'handcuffs'
        self.stop()

class Actions(disnake.ui.View):
    def __init__(self,turn,dealer,player,dealer_inv,player_inv,barrel,doubled,handcuffed):
        self.turn = turn
        self.dealer = dealer
        self.player = player
        self.dealer_inv = dealer_inv
        self.player_inv = player_inv
        self.barrel = barrel
        self.doubled = doubled
        self.handcuffed = handcuffed
        super().__init__(timeout=180.0)
        self.value: Optional[str] = 'Timeout'

    @disnake.ui.button(label="–í—ã—Å—Ç—Ä–µ–ª–∏—Ç—å!", style=disnake.ButtonStyle.red)
    async def shoot(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        if inter.user == self.turn:
          view = Shoot()
          await inter.response.send_message('–ö—É–¥–∞ —Å—Ç—Ä–µ–ª—è—Ç—å –±—É–¥–µ–º?',view=view,ephemeral=True)
          await view.wait()
          if view.value is not None:
            if view.value == False: self.value = 'Self'
            if view.value == True: self.value = 'Opposite'
            message = await inter.original_message()
            await message.delete()
            self.stop()
        else:
            if inter.user == self.dealer or inter.user == self.player:
                await inter.response.send_message('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥.', ephemeral=True)
            else:
                await inter.response.send_message('–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ.', ephemeral=True)
    
    @disnake.ui.button(label="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç", style=disnake.ButtonStyle.gray)
    async def inv_use(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        if inter.user == self.turn:
          if inter.user == self.dealer:
                if self.dealer_inv['total'] == 0:
                    await inter.response.send_message('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ. <:HUH:1187112357541974077>',ephemeral=True)
                else:
                    inv = self.dealer_inv
                    view = Use()
                    embed = disnake.Embed(color=disnake.Color(0x474896))
                    embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.dealer_inv["glass"]} —à—Ç.)',value='–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω –≤ –±–∞—Ä–∞–±–∞–Ω–µ –∏ **—Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω**',inline=False)
                    embed.add_field(name=f'–ü–∏–≤–æ ({self.dealer_inv["beer"]} —à—Ç.)',value='–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞—É–Ω–¥ –µ—Å–ª–∏ –±–∞—Ä–∞–±–∞–Ω –ø—É—Å—Ç–æ–π',inline=False)
                    embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.dealer_inv["doubler"]} —à—Ç.)',value='–£–¥–≤–∞–∏–≤–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ –æ–¥–∏–Ω –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª –∏–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Ö–æ–¥–∞'+(' [–ü—Ä–∏–º–µ–Ω—ë–Ω]' if self.doubled else ''),inline=False)
                    embed.add_field(name=f'–©–∏—Ç ({self.dealer_inv["shield"]} —à—Ç.)',value='–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –æ—Ç –≤—ã—Å—Ç—Ä–µ–ª–∞ (—É–¥–≤–æ–µ–Ω–Ω—ã–π –ø–∞—Ç—Ä–æ–Ω –Ω–∞–Ω–µ—Å—ë—Ç 1 —É—Ä–æ–Ω), —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞',inline=False)
                    embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.dealer_inv["handcuffs"]} —à—Ç.)',value='–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞',inline=False)
                    await inter.response.send_message('–ß—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',embed=embed,view=view,ephemeral=True)
                    message = await inter.original_message()
                    await view.wait()
                    view.clear_items()
                    embed = None
                    if view.value is None:
                        await message.delete()
                    elif self.dealer_inv[view.value] == 0:
                        await message.edit('–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.',view=view,embed=embed)
                    else:
                        if view.value == 'glass':
                            await message.edit(f'{self.barrel.count(1)} –ø–∞—Ç—Ä–æ–Ω(–∞), {self.barrel.count(0)} –ø—É—Å—Ç–æ–π(-—ã—Ö)\n\n–°–µ–π—á–∞—Å –∑–∞—Ä—è–∂–µ–Ω '+('**–ø—É—Å—Ç–æ–π**.' if self.barrel[0] == 0 else '**–ø–∞—Ç—Ä–æ–Ω**.'),view=view,embed=embed)
                        if view.value == 'beer':
                            self.value = 'Beer'
                            await message.delete()
                            self.stop()
                        if view.value == 'doubler':
                            if self.doubled:
                                await message.edit('–£—Ä–æ–Ω —É–∂–µ —É–¥–≤–æ–µ–Ω!',view=view,embed=embed)
                                self.dealer_inv[view.value] += 1
                                self.dealer_inv['total'] += 1
                            else:
                                self.value = 'Doubler'
                                await message.delete()
                                self.stop()
                        if view.value == 'shield':
                            if self.dealer_inv['shielded']:
                                await message.edit('–í—ã —É–∂–µ –ø–æ–¥ —â–∏—Ç–æ–º!',view=view,embed=embed)
                                self.dealer_inv[view.value] += 1
                                self.dealer_inv['total'] += 1
                            else:
                                self.value = 'Shield'
                                await message.delete()
                                self.stop()
                        if view.value == 'handcuffs':
                            if self.handcuffed:
                                await message.edit('–û–ø–ø–æ–Ω–µ–Ω—Ç —É–∂–µ –≤ –Ω–∞—Ä—É—á–Ω–∏–∫–∞—Ö!',view=view,embed=embed)
                                self.dealer_inv[view.value] += 1
                                self.dealer_inv['total'] += 1
                            else:
                                self.value = 'Handcuffs'
                                await message.delete()
                                self.stop()
                        self.dealer_inv[view.value] -= 1
                        self.dealer_inv['total'] -= 1

          if inter.user == self.player:
                if self.player_inv['total'] == 0:
                    await inter.response.send_message('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ. <:HUH:1187112357541974077>',ephemeral=True)
                else:
                    inv = self.player_inv
                    view = Use()
                    embed = disnake.Embed(color=disnake.Color(0x474896))
                    embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.player_inv["glass"]} —à—Ç.)',value='–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–∞—Ç—Ä–æ–Ω –≤ –±–∞—Ä–∞–±–∞–Ω–µ –∏ **—Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω**',inline=False)
                    embed.add_field(name=f'–ü–∏–≤–æ ({self.player_inv["beer"]} —à—Ç.)',value='–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–∞—Ç—Ä–æ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞—É–Ω–¥ –µ—Å–ª–∏ –±–∞—Ä–∞–±–∞–Ω –ø—É—Å—Ç–æ–π',inline=False)
                    embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.player_inv["doubler"]} —à—Ç.)',value='–£–¥–≤–∞–∏–≤–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ –æ–¥–∏–Ω –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª –∏–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Ö–æ–¥–∞',inline=False)
                    embed.add_field(name=f'–©–∏—Ç ({self.player_inv["shield"]} —à—Ç.)',value='–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –æ—Ç –≤—ã—Å—Ç—Ä–µ–ª–∞ (—É–¥–≤–æ–µ–Ω–Ω—ã–π –ø–∞—Ç—Ä–æ–Ω –Ω–∞–Ω–µ—Å—ë—Ç 1 —É—Ä–æ–Ω), —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞',inline=False)
                    embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.player_inv["handcuffs"]} —à—Ç.)',value='–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞',inline=False)
                    await inter.response.send_message('–ß—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',embed=embed,view=view,ephemeral=True)
                    message = await inter.original_message()
                    await view.wait()
                    view.clear_items()
                    embed = None
                    if view.value is None:
                        await message.delete()
                    elif self.player_inv[view.value] == 0:
                        await message.edit('–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.',view=view,embed=embed)
                    else:
                        if view.value == 'glass':
                            await message.edit(f'{self.barrel.count(1)} –ø–∞—Ç—Ä–æ–Ω(–∞), {self.barrel.count(0)} –ø—É—Å—Ç–æ–π(-—ã—Ö)\n\n–°–µ–π—á–∞—Å –∑–∞—Ä—è–∂–µ–Ω '+('**–ø—É—Å—Ç–æ–π**.' if self.barrel[0] == 0 else '**–ø–∞—Ç—Ä–æ–Ω**.'),view=view,embed=embed)
                        if view.value == 'beer':
                            self.value = 'Beer'
                            await message.delete()
                            self.stop()
                        if view.value == 'doubler':
                            if self.doubled:
                                await message.edit('–£—Ä–æ–Ω —É–∂–µ —É–¥–≤–æ–µ–Ω!',view=view,embed=embed)
                                self.player_inv[view.value] += 1
                                self.player_inv['total'] += 1
                            else:
                                self.value = 'Doubler'
                                await message.delete()
                                self.stop()
                        if view.value == 'shield':
                            if self.player_inv['shielded']:
                                await message.edit('–í—ã —É–∂–µ –ø–æ–¥ —â–∏—Ç–æ–º!',view=view,embed=embed)
                                self.player_inv[view.value] += 1
                                self.player_inv['total'] += 1
                            else:
                                self.value = 'Shield'
                                await message.delete()
                                self.stop()
                        if view.value == 'handcuffs':
                            if self.handcuffed:
                                await message.edit('–û–ø–ø–æ–Ω–µ–Ω—Ç —É–∂–µ –≤ –Ω–∞—Ä—É—á–Ω–∏–∫–∞—Ö!',view=view,embed=embed)
                                self.player_inv[view.value] += 1
                                self.player_inv['total'] += 1
                            else:
                                self.value = 'Handcuffs'
                                await message.delete()
                                self.stop()
                        self.player_inv[view.value] -= 1
                        self.player_inv['total'] -= 1
        else:
            if inter.user == self.dealer:
                embed = disnake.Embed(color=disnake.Color(0x474896))
                embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.dealer_inv["glass"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ü–∏–≤–æ ({self.dealer_inv["beer"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.dealer_inv["doubler"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–©–∏—Ç ({self.dealer_inv["shield"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.dealer_inv["handcuffs"]} —à—Ç.)',value='',inline=False)
                await inter.response.send_message('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥, –Ω–æ –Ω–∞ —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ:',embed=embed,ephemeral=True)
            if inter.user == self.player:
                embed = disnake.Embed(color=disnake.Color(0x474896))
                embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.player_inv["glass"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ü–∏–≤–æ ({self.player_inv["beer"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.player_inv["doubler"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–©–∏—Ç ({self.player_inv["shield"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.player_inv["handcuffs"]} —à—Ç.)',value='',inline=False)
                await inter.response.send_message('–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥, –Ω–æ –Ω–∞ —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ:',embed=embed,ephemeral=True)
            else:
                await inter.response.send_message('–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ.', ephemeral=True)
       
    @disnake.ui.button(label="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞", style=disnake.ButtonStyle.blurple)
    async def inv_opponent(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        if inter.user == self.dealer:
            if self.player_inv['total'] == 0:
                await inter.response.send_message('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –ø—É—Å—Ç.',ephemeral=True)
            else:
                embed = disnake.Embed(color=disnake.Color(0x474896))
                embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.player_inv["glass"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ü–∏–≤–æ ({self.player_inv["beer"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.player_inv["doubler"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–©–∏—Ç ({self.player_inv["shield"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.player_inv["handcuffs"]} —à—Ç.)',value='',inline=False)
                await inter.response.send_message('**–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞:**',embed=embed,ephemeral=True)
        elif inter.user == self.player:
            if self.dealer_inv['total'] == 0:
                await inter.response.send_message('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –ø—É—Å—Ç.',ephemeral=True)
            else:
                embed = disnake.Embed(color=disnake.Color(0x474896))
                embed.add_field(name=f'–°—Ç–µ–∫–ª–æ ({self.dealer_inv["glass"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ü–∏–≤–æ ({self.dealer_inv["beer"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–£–¥–≤–æ–∏—Ç–µ–ª—å ({self.dealer_inv["doubler"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–©–∏—Ç ({self.dealer_inv["shield"]} —à—Ç.)',value='',inline=False)
                embed.add_field(name=f'–ù–∞—Ä—É—á–Ω–∏–∫–∏ ({self.dealer_inv["handcuffs"]} —à—Ç.)',value='',inline=False)
                await inter.response.send_message('**–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞:**',embed=embed,ephemeral=True)
        else:
            await inter.response.send_message('–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ.', ephemeral=True)

class Confirm(disnake.ui.View):
    def __init__(self, author, duel_member):
        self.author = author
        self.duel_member = duel_member
        super().__init__(timeout=60.0)
        self.value: Optional[bool] = None
        self.user: Optional[int] = None

    @disnake.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤!", style=disnake.ButtonStyle.blurple)
    async def confirm(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        if inter.user.id == self.author.id:
          await inter.response.send_message('–ù–µ–ª—å–∑—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–∞–º–æ–º—É —Å–µ–±–µ.', ephemeral=True)
        elif self.duel_member and inter.user != self.duel_member:
            await inter.response.send_message('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —á—É–∂–æ–π –≤—ã–∑–æ–≤.', ephemeral=True)
        else:
          self.value = True
          self.user = inter.user
          self.stop()
        
    @disnake.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É", style=disnake.ButtonStyle.red)
    async def cancel(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
      if inter.user.id == self.author.id:
        self.value = False
        self.stop()
      else:
        await inter.response.send_message('–û—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É –≤ —Å–∏–ª–∞—Ö –ª–∏—à—å —Ç–æ—Ç, –∫—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –≤ –Ω–µ—ë —Å—ã–≥—Ä–∞—Ç—å.', ephemeral=True)

class QuestionSelect(disnake.ui.StringSelect):
    message: disnake.Message = None
    score: int = 0

    def __init__(self, question: int = 1):
        self.question = question
        options = []

        if question == 1:
            options = [
                disnake.SelectOption(label='–ï—Å–ª–∏ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ, –∑–Ω–∞—á–∏—Ç –º–æ–∂–Ω–æ', value='q1_a1'),
                disnake.SelectOption(label='–°–¥–µ–ª–∞—é –æ–¥–∏–Ω —Ä–∞–∑', description='–µ—Å–ª–∏ –Ω–µ –Ω–∞–∫–∞–∑–∞–ª–∏ - –∑–Ω–∞—á–∏—Ç –º–æ–∂–Ω–æ', value='q1_a2'),
                disnake.SelectOption(label='–°–ø—Ä–æ—à—É —É –∞–¥–º–∏–Ω–∞', description='–æ–Ω –ª—É—á—à–µ –∑–Ω–∞–µ—Ç', value='q1_a3'),
                disnake.SelectOption(label='–Ø —Å–∞–º —Å–µ–±–µ –∞–¥–º–∏–Ω', description='—á—ë —Ö–æ—á—É, —Ç–æ –∏ —Ç–≤–æ—Ä—é', value='q1_a4'),
            ]
        elif question == 2:
            options = [
                disnake.SelectOption(label='–°–æ–æ–±—â–∏—Ç—å –∞–¥–º–∏–Ω–∞–º', description='—á–µ—Ä–µ–∑ —Ç–∏–∫–µ—Ç –∏–ª–∏ –ø–∏–Ω–≥ —Ä–æ–ª–∏', value='q2_a1'),
                disnake.SelectOption(label='–ù–∞–±–ª—é–¥–∞—Ç—å', description='—Å–∞–º–æ —É—Å–ø–æ–∫–æ–∏—Ç—Å—è', value='q2_a2'),
                disnake.SelectOption(label='–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç', description='—á—Ç–æ–±—ã –±—ã–ª–æ –≤–µ—Å–µ–ª–µ–µ', value='q2_a3'),
                disnake.SelectOption(label='–†–µ—à–∏—Ç—å –≤—Å—ë —Å–∞–º–æ–º—É', description='–¥–∞ –∫–æ–º—É –Ω—É–∂–Ω—ã —ç—Ç–∏ –∞–¥–º–∏–Ω—ã?', value='q2_a4'),
            ]
        elif question == 3:
            options = [
                disnake.SelectOption(label='—á—ë?', value='q3_a1'),
                disnake.SelectOption(label='—Ü–∏—Ñ—Ä–∞ 6, –≤–µ—Å—å–º–∞ –ø–æ–ª–µ–∑–Ω–æ–µ', value='q3_a2'),
                disnake.SelectOption(label='—Ü–∏—Ñ—Ä–∞ 9, –æ—á–µ–Ω—å –∫—Ä—É—Ç–∞—è', value='q3_a3'),
                disnake.SelectOption(label='—Ç–∞ —á—Ç–æ –ø—Ä–æ –¥–æ–±—Ä–æ—Ç—É :)', value='q3_a4'),
            ]

        super().__init__(
            placeholder='[–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:]',
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, inter: disnake.MessageInteraction):
        if self.question == 1:
            if inter.values[0] == 'q1_a3':
                self.score += 1

            qs = QuestionSelect(question=2)
            qs.score = self.score
            qs.message = self.message
            view = disnake.ui.View()
            view.add_item(qs)
            try:
                await inter.send()
            except Exception:
                pass
            await self.message.edit('–í—ã –≤–∏–¥–∏—Ç–µ, —á—Ç–æ –≤ —á–∞—Ç–µ –Ω–∞—á–∞–ª—Å—è —Å—É—â–∏–π –∫–æ—à–º–∞—Ä: —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Å–∫–æ—Ä–±–ª—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –º–∞—Ç–µ—Ä—è—Ç—Å—è, –¥–∞ –∏ –≤–æ–æ–±—â–µ –Ω–µ —Å–æ–±–ª—é–¥–∞—é—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–Ω–µ—Ä—ã! \n–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å **–≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å**?', view=view)
        elif self.question == 2:
            if inter.values[0] == 'q2_a1':
                self.score += 1

            qs = QuestionSelect(question=3)
            qs.score = self.score
            qs.message = self.message
            view = disnake.ui.View()
            view.add_item(qs)
            try:
                await inter.send()
            except Exception:
                pass
            await self.message.edit('–°–∞–º–æ–µ –ø–æ–ª–µ–∑–Ω–æ–µ –∏ –ª—É—á—à–µ–µ –ø—Ä–∞–≤–∏–ª–æ (–ø–æ –≤–∞—à–µ–º—É —Å–∫—Ä–æ–º–Ω–æ–º—É –º–Ω–µ–Ω–∏—é)?', view=view)
        elif self.question == 3:
            if inter.values[0] != 'q3_a1':
                self.score += 1

            try:
                await inter.send()
            except Exception:
                pass

            if self.score >= 2:
                role = inter.guild.get_role(1014569986968268891)
                await inter.author.add_roles(role)
                inter.bot.add_user_to_db(inter.author.id)
                await self.message.edit(':ballot_box_with_check: –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏! –¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —á–ª–µ–Ω –Ω–∞—à–µ–≥–æ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!', view=None)
            else:
                await self.message.edit(':x: –ì–¥–µ-—Ç–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. <:nikoeepy:1181309167152136264>', view=None)

def setup(bot: commands.Bot):
    bot.add_cog(Prikol(bot))